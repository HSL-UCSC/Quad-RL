syntax = "proto3";

package dronecontrol;

service DroneService {
  rpc GetDirection(DirectionRequest) returns (DirectionResponse)
}

message DirectionRequest {
  DroneState drone_state = 1;
  repeated PolygonPosition polygon_position = 2;
}

// Define Request Messages //////////////////////////////////////////////////////

// Define the obstacle as a polygon
message PolygonPosition {
  float x = 1;
  float y = 2;
  float z = 3;
}

// Define a Point for polygon vertices
message Point {
  float x = 1;  
  float y = 2;
  float z = 3;
}

// define a polygon obstable as a list of points
message Polygon { repeated Point vertices = 1; }

// define the drone in terms of position and velocity
message DroneState {
  // Position
  float x = 1;
  float y = 2;
  float z = 3;

  // Velocity
  float vx = 4;
  float vy = 5;
  float vz = 6;

  // Orientation
  float roll = 7;
  float pitch = 8;
  float yaw = 9;
}

// Define Response Messages /////////////////////////////////////////////////////
message DirectionResponse {
  State state = 1;

  oneof control_type {
    DiscreteHeading discrete_heading = 2;
    ContinuousHeading continuous_heading = 3;
  }
}

message DiscreteHeading { 
  HeadingDirection direction = 1; 
  }

enum HeadingDirection {
  STRAIGHT = 0;
  LEFT = 1;
  HARD_LEFT = 2;
  RIGHT = 3;
  HARD_RIGHT = 4;
}

message ContinuousHeading {
  float rad = 1;
}